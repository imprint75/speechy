---
- hosts: all
  user: vagrant
  sudo: yes
  tasks:
    - name: Installs nginx web server
      apt: pkg=nginx state=installed
      notify:
        - start nginx

    - name: Installs rabbitmq
      apt: pkg=rabbitmq-server state=installed

    - name: create self-signed SSL cert
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=Oregon/L=Portland/O=IT/CN=${ansible_fqdn}" -days 3650 -keyout /etc/ssl/certs/server.key -out /etc/ssl/certs/server.crt -extensions v3_ca creates=/etc/ssl/certs/server.crt
      notify: reload nginx

    - name: install python dev
      sudo: yes
      apt: pkg={{ item }} state=present
      with_items:
        - python-dev
        - python3-setuptools
        - python3.4-venv
        - python3-dev
        - python3-pip
        - build-essential
        - libjack-jackd2-dev
        - portaudio19-dev
        - git
        - espeak

    - name: Install pip requirements
      pip:
        requirements: /srv/speechy/requirements.txt
        virtualenv: /srv/speechy_env
        virtualenv_python: python3.4

    - name: Setup upstart
      sudo: yes
      template: src={{item.src}} dest={{item.dest}} owner=root group=root mode=0644
      with_items:
        - { src: 'confs/upstart', dest: '/etc/init/speechy.conf' }

    - command: ln -s /lib/init/upstart-job /etc/init.d/speechy

    - name: Install Pkgs for CMU Sphinx
      sudo: yes
      apt: pkg={{ item }} state=present
      with_items:
        - autoconf
        - libtool
        - automake
        - bison
        - swig
        - unzip

    - name: Install CMU Sphinx & Pocketsphinx
      sudo: yes
      shell: /srv/speechy/bootstrap.sh

    - name: Install pocketsphinx Python
      pip:
        name: pocketsphinx
        version: 0.0.9
        virtualenv: /srv/speechy_env

    - name: Configure nginx
      template: src={{item.src}} dest={{item.dest}}
      with_items:
        - { src: 'confs/nginx.conf', dest: '/etc/nginx/nginx.conf' }
        - { src: 'confs/app.conf', dest: '/etc/nginx/sites-available/default' }
      notify:
        - restart nginx

  handlers:
    - name: start nginx
      service: name=nginx state=started

    - name: restart nginx
      service: name=nginx state=restarted
